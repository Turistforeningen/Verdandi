# Dev values for Verdandi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

verdandi_test:
  enabled: false

# replicaCount: 1
# restartPolicy: Always
#
# imagePullSecrets:
#   - name: regcred
# volumes:
#   - name: secrets
#     emptyDir: {}
#
# initContainers:
#   - name: secrets
#     image: turistforeningen/verdandi-secrets
#     tag: "v5"
#     imagePullPolicy: IfNotPresent
#     args:
#       - /bin/sh
#       - -c
#       - mv /secrets/* /tmp/
#     volumeMounts:
#       - name: secrets
#         mountPath: /tmp
#
#
# # containers
# containers:
#   - name: redis
#     image: redis
#     tag: "3.0"
#     pullPolicy: IfNotPresent
#     args:
#       - /bin/sh
#       - -c
#       -  redis-server --appendonly yes
#     ports:
#       - name: http
#         containerPort: 6379
#         protocol: TCP
#
#   - name: verdandi
#     image: turistforeningen/verdandi-test
#     tag: "test"
#     pullPolicy: IfNotPresent
#     environment:
#       AWS_BUCKET_NAME: sjekkut
#       AWS_BUCKET_PATH: photos/
#       AWS_BUCKET_REGION: eu-west-1
#       AWS_BUCKET_URL: "https://sjekkut.s3.amazonaws.com/"
#       CHECKIN_MAX_DISTANCE: 100
#       CHECKIN_TIMEOUT: 21600
#       FORCE_SSL: true
#       HSTS_MAX_AGE: 31536000
#       NEW_RELIC_APP_NAME: Verdandi
#       NEW_RELIC_LOG: stdout
#       NEW_RELIC_NO_CONFIG_FILE: true
#       NODE_ENV: production
#       NTB_API_ENV: api
#       STATSD_HOST: statsd
#       STATSD_PORT: 8125
#       VIRTUAL_HOST: "http://sjekkut.app.dnt.no/api/test*,https://sjekkut.app.dnt.no/api/test*"
#       VIRTUAL_HOST_WEIGHT: 30
#       VIRTUAL_PATH: /api/test
#       VIRTUAL_PORT: 8080
#     ports:
#       - name: "http"
#         containerPort: 8080
#         protocol: TCP
#     volumeMounts:
#       - name: secrets
#         mountPath: /secrets
#         readOnly: true
#     resources: {}
#

# the subchart (web-app) values
web_app:
  # Default values for facebook-apps.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # app name
  fullnameOverride: "verdandi"

  # deployment spec
  replicaCount: 1
  restartPolicy: Always

  imagePullSecrets:
    - name: regcred
  volumes:
    - name: secrets
      emptyDir: {}

  initContainers:
    - name: secrets
      image: turistforeningen/verdandi-secrets
      tag: "v5"
      imagePullPolicy: IfNotPresent
      args:
        - /bin/sh
        - -c
        - mv /secrets/* /tmp/
      volumeMounts:
        - name: secrets
          mountPath: /tmp


  # containers
  containers:
    - name: redis
      image: redis
      tag: "3.0"
      pullPolicy: IfNotPresent
      args:
        - /bin/sh
        - -c
        -  redis-server --appendonly yes
      ports:
        - name: http
          containerPort: 6379
          protocol: TCP

    - name: verdandi
      image: eu.gcr.io/dnt-docker-registry-public/verdandi
      tag: "latest"
      pullPolicy: Always
      environment:
        AWS_BUCKET_NAME: sjekkut
        AWS_BUCKET_PATH: photos/
        AWS_BUCKET_REGION: eu-west-1
        AWS_BUCKET_URL: "https://sjekkut.s3.amazonaws.com/"
        CHECKIN_MAX_DISTANCE: 100
        CHECKIN_TIMEOUT: 21600
        FORCE_SSL: true
        HSTS_MAX_AGE: 31536000
        MONGO_URI: ""
        NEW_RELIC_APP_NAME: Verdandi
        NEW_RELIC_LOG: stdout
        NEW_RELIC_NO_CONFIG_FILE: true
        NODE_ENV: production
        NTB_API_ENV: api
        STATSD_HOST: statsd
        STATSD_PORT: 8125
        VIRTUAL_HOST: "http://sjekkut.app.dnt.no/api/v3*,https://sjekkut.app.dnt.no/api/v3*"
        VIRTUAL_HOST_WEIGHT: 30
        VIRTUAL_PATH: /api/v3
        VIRTUAL_PORT: 8080
      ports:
        - name: "http"
          containerPort: 8080
          protocol: TCP
      volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
      resources:
        limits:
          cpu: 300m
          memory: 512Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi
      # livenessProbe:
      #   path:
      #   port:
      # readinessProbe:
      #   path:
      #   port:

  # services
  services:
    - name: verdandi
      type: ClusterIP
      port: 8080
    - name: redis
      type: ClusterIP
      port: 6379

  ingress:
    # Used to create an Ingress record.
    # DO NOT ENABLE INGRESS FOR Verdandi in PRODUCTION.
    # Verdandi shares the same domain with Urdr and the
    # ingress is configured on Urdr with two paths.
    # See production-urdr-values.yaml
    # ENABLED HERE FOR DEV
    enabled: true 
    hosts:
      - host: verdandi.dev.dnt.org
        path: /api/v3
        serviceName: verdandi
        servicePort: 8080
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: 10m

    tls:
      - secretName: dev-beta-dnt-org-tls 
        hosts:
          - verdandi.dev.dnt.org
    
  cert:
    enabled: false
    issuer: "letsencrypt-production"